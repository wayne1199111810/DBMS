CREATE TABLE PUBLIC_USER_INFORMATION AS (SELECT * FROM weile.PUBLIC_USER_INFORMATION);
CREATE TABLE PUBLIC_ARE_FRIENDS AS (SELECT * FROM weile.PUBLIC_ARE_FRIENDS );
CREATE TABLE PUBLIC_PHOTO_INFORMATION AS (SELECT * FROM weile.PUBLIC_PHOTO_INFORMATION);
CREATE TABLE PUBLIC_TAG_INFORMATION AS (SELECT * FROM weile.PUBLIC_TAG_INFORMATION);
CREATE TABLE PUBLIC_EVENT_INFORMATION AS (SELECT * FROM weile.PUBLIC_EVENT_INFORMATION);

/* USERS */
INSERT INTO USERS (USER_ID, FIRST_NAME, LAST_NAME, YEAR_OF_BIRTH, MONTH_OF_BIRTH, DAY_OF_BIRTH, GENDER)
SELECT DISTINCT USER_ID, FIRST_NAME, LAST_NAME, YEAR_OF_BIRTH, MONTH_OF_BIRTH, DAY_OF_BIRTH, GENDER FROM PUBLIC_USER_INFORMATION
;

-- FRIENDS
INSERT INTO FRIENDS(USER1_ID, USER2_ID)
SELECT DISTINCT F1.USER1_ID, F1.USER2_ID FROM PUBLIC_ARE_FRIENDS F1 WHERE F1.USER1_ID < F1.USER2_ID
UNION
SELECT DISTINCT F2.USER1_ID, F2.USER2_ID FROM PUBLIC_ARE_FRIENDS F2 WHERE F2.USER2_ID < F2.USER1_ID
;

-- CITIES
INSERT INTO CITIES(CITY_NAME, STATE_NAME, COUNTRY_NAME)
SELECT DISTINCT HOMETOWN_CITY, HOMETOWN_STATE, HOMETOWN_COUNTRY FROM PUBLIC_USER_INFORMATION
UNION
SELECT DISTINCT CURRENT_CITY, CURRENT_STATE, CURRENT_COUNTRY FROM PUBLIC_USER_INFORMATION
UNION
SELECT DISTINCT EVENT_CITY, EVENT_STATE, EVENT_COUNTRY FROM PUBLIC_EVENT_INFORMATION
;

-- USER_CURRENT_CITY
INSERT INTO USER_CURRENT_CITY (USER_ID, CURRENT_CITY_ID)
SELECT DISTINCT U.USER_ID, C.CITY_ID FROM PUBLIC_USER_INFORMATION U, CITIES C
WHERE U.CURRENT_CITY = C.CITY_NAME AND U.CURRENT_STATE = C.STATE_NAME AND U.CURRENT_COUNTRY = C.COUNTRY_NAME
;

-- USER_HOMETOWN_CITY
INSERT INTO USER_HOMETOWN_CITY (USER_ID, HOMETOWN_CITY_ID)
SELECT DISTINCT U.USER_ID, C.CITY_ID FROM PUBLIC_USER_INFORMATION U, CITIES C
WHERE U.HOMETOWN_CITY = C.CITY_NAME AND U.HOMETOWN_STATE = C.STATE_NAME AND U.HOMETOWN_COUNTRY = C.COUNTRY_NAME
;

-- MESSAGE

-- PROGRAMS

INSERT INTO PROGRAMS (INSTITUTION, CONCENTRATION, DEGREE)
SELECT DISTINCT U.INSTITUTION_NAME, U.PROGRAM_CONCENTRATION, U.PROGRAM_DEGREE FROM PUBLIC_USER_INFORMATION U
WHERE U.INSTITUTION_NAME IS NOT NULL AND U.PROGRAM_CONCENTRATION IS NOT NULL AND U.PROGRAM_DEGREE IS NOT NULL
;

-- EDUCATION
INSERT INTO EDUCATION (USER_ID, PROGRAM_ID, PROGRAM_YEAR)
SELECT DISTINCT U.USER_ID, P.PROGRAM_ID, U.PROGRAM_YEAR
FROM PUBLIC_USER_INFORMATION U, PROGRAMS P
WHERE U.INSTITUTION_NAME = P.INSTITUTION AND U.PROGRAM_CONCENTRATION = P.CONCENTRATION AND U.PROGRAM_DEGREE = P.DEGREE
;

-- USER_EVENTS
INSERT INTO USER_EVENTS (EVENT_ID, EVENT_CREATOR_ID, EVENT_NAME, EVENT_TAGLINE, EVENT_DESCRIPTION, EVENT_HOST, EVENT_TYPE, EVENT_SUBTYPE, EVENT_LOCATION, EVENT_CITY_ID, EVENT_START_TIME, EVENT_END_TIME)
SELECT DISTINCT E.EVENT_ID, E.EVENT_CREATOR_ID, E.EVENT_NAME, E.EVENT_TAGLINE, E.EVENT_DESCRIPTION, E.EVENT_HOST, E.EVENT_TYPE, E.EVENT_SUBTYPE, E.EVENT_LOCATION, C.CITY_ID, E.EVENT_START_TIME, E.EVENT_END_TIME
FROM PUBLIC_EVENT_INFORMATION E, CITIES C
WHERE E.EVENT_CITY = C.CITY_NAME AND E.EVENT_STATE = C.STATE_NAME AND E.EVENT_COUNTRY = C.COUNTRY_NAME
;

-- PARTICIPANTS

-- ALBUMS
SET CONSTRAINT COVER_CONSTRAINT DEFERRED;

INSERT INTO ALBUMS (ALBUM_ID, ALBUM_OWNER_ID, ALBUM_NAME, ALBUM_CREATED_TIME, ALBUM_MODIFIED_TIME, ALBUM_LINK, ALBUM_VISIBILITY, COVER_PHOTO_ID)
SELECT DISTINCT ALBUM_ID, OWNER_ID, ALBUM_NAME, ALBUM_CREATED_TIME, ALBUM_MODIFIED_TIME, ALBUM_LINK, ALBUM_VISIBILITY, COVER_PHOTO_ID
FROM PUBLIC_PHOTO_INFORMATION
;

-- PHOTOS
INSERT INTO PHOTOS (PHOTO_ID, ALBUM_ID, PHOTO_CAPTION, PHOTO_CREATED_TIME, PHOTO_MODIFIED_TIME, PHOTO_LINK)
SELECT DISTINCT PHOTO_ID, ALBUM_ID, PHOTO_CAPTION, PHOTO_CREATED_TIME, PHOTO_MODIFIED_TIME, PHOTO_LINK
FROM PUBLIC_PHOTO_INFORMATION
;

COMMIT;
-- TAGS
INSERT INTO TAGS (TAG_PHOTO_ID, TAG_SUBJECT_ID, TAG_CREATED_TIME, TAG_X, TAG_Y)
SELECT DISTINCT PHOTO_ID, TAG_SUBJECT_ID, TAG_CREATED_TIME, TAG_X_COORDINATE, TAG_Y_COORDINATE
FROM PUBLIC_TAG_INFORMATION
;

DROP TABLE PUBLIC_USER_INFORMATION;
DROP TABLE PUBLIC_ARE_FRIENDS;
DROP TABLE PUBLIC_PHOTO_INFORMATION;
DROP TABLE PUBLIC_TAG_INFORMATION;
DROP TABLE PUBLIC_EVENT_INFORMATION;